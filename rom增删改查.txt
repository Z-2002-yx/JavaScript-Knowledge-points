--------------------------------------添加数据
--save 方法
  对象 = 类（字段名=值）
  对象.save()

--create 方法
  类.objects.create(字段=值)

--bulk_create 批量新增
  对象1 = 类（字段名=值）
  对象2 = 类（字段名=值）
  对象3 = 类（字段名=值）
  列表  = [ 对象1，对象2，对象3]
  类.objects.bulk_create(列表)

--------------------------------------查询数据


--get方法
列表 = 类.objects.get(条件)
列表中包含的是一个对象


--filter方法（values方法约束字段）
列表 = 类.objects.filter(条件).values('字段')
列表中包含的是每个字典


--all方法
列表 = 类.objects.all()
列表中存放的是所有对象

-----------------------------------------删除数据

1、通过get方法查询出指定字段的所有信息的对象
2、通过对象调用delete（）方法

------------------------------------------更新数据

1、通过get方法查询出指定字段的所有信息的对象
2、通过对对象的属性赋值
3、对象使用save方法保存



-------------------------------------------查询时where条件

--大于
 字段__gt=值（在SQL中表示 select * from 表名 where 字段>值）
--大于等于
 字段__gte=值（在SQL中表示 select * from 表名 where 字段>=值）


--小于
 字段__lt=值（在SQL中表示 select * from 表名 where 字段<值）
--小于等于
 字段__lte=值（在SQL中表示 select * from 表名 where 字段<=值）


---模糊查询

--contains--(在此基础上加 i 表示不区分大小写   icontains)
字段__contains='值'  (在SQL中表示  where 字段 like '%值%'

--startswith--(在此基础上加 i 表示不区分大小写
字段__startswith='值' (在SQL中表示  where 字段 like '值%'

--endswith--(在此基础上加 i 表示不区分大小写
字段__endswith='值' (在SQL中表示  where 字段 like '%值'


---范围查询
--in--
字段__in=[  ]   (在SQL中表示  where 字段 in (1,2)/逻辑与的关系

--range--
字段__range=[ 1,2 ]  (在SQL中表示  where 字段 between  1 and 2/范围查询


---逻辑与逻辑或的简单用法

--Q(条件1)  & Q(条件2)逻辑与
--Q(条件1)  | Q(条件2)逻辑或


--F
用于字段自增自减

对象.字段 = F(字段) + 1
对象.save()
 